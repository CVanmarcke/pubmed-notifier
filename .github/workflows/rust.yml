name: Rust Release

on:
  push:
    tags:
      - '*'  # Run on any tag push

env:
  CARGO_TERM_COLOR: always

permissions:
  contents: write

jobs:
  release:
    name: Release - ${{ matrix.platform.os-name }}
    strategy:
      matrix:
        include:
          - os-name: Linux-x86_64
            runs-on: ubuntu-latest
            target: x86_64-unknown-linux-musl
          # more targets here ...
    runs-on: ${{ matrix.runs-on }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build binary
        uses: houseabsolute/actions-rust-cross@v1
        with:
          command: build
          target: ${{ matrix.target }}
          args: "--locked --release"
          strip: true
      - name: Prepare binary for upload
        run: |
          mkdir -p dist
          cp target/${{ matrix.target }}/release/rssnotify dist/rssnotify-${{ matrix.target }}
      - name: Upload binary to tag release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/rssnotify-${{ matrix.target }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Update 'latest' release with binary
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Create or update the 'latest' release
          gh release view latest || gh release create latest dist/rssnotify-${{ matrix.target }} --title "Latest" --notes "Latest build" --prerelease
          gh release upload latest dist/rssnotify-${{ matrix.target }} --clobber
