* Pubmed RSS notifier
This is a program written to extract articles based on a PubMed RSS feed, filter them based on certain keywords, and send them through Telegram to users.

A key feature is that it is configurable by the users by issuing commands to the Telegram bot. Multiple collections of RSS feeds are possible per user, and every collection can have different keywords in their blacklist and whitelist.

This was mainly a personal project to learn rust. It is far from a well written program.

* Installation and setup
** Installation
1. Clone the git repo.
2. Build the dep with ~cargo deb~ and install ~.dep~ (can be automatically installed by building with ~cargo deb --install~).
3. Create a config file (infra). If you run it as a user the default location for the file is ~~/.config/rssnotify/config.toml~. For systemd it is ~/root/.config/rssnotify/config.toml~ [TODO: run with systemd as --user]
4. Start with the command line:
   1. As user: ~rssnotify [args]~ (or ~rssnotify [args] &~ to start the process in the background).
   2. Or with systemd: ~systemctl start rssnotify~. Note that in this case, you need to provide the bot token in the config file root folder or as environment variable.

** Command line arguments

| *Arg*                         | *Setting*                                                                                    |
|-----------------------------+--------------------------------------------------------------------------------------------|
| -t / --token [token]        | Set the telegram bot token.                                                                |
| -np / --non-persistent      | Update feeds and send new items to the users, and shut down afterwards. Does not run in the background. |
| -u / --update-times [times] | Set the default refresh times (default 9-17). Eg =9-17,19= is every hour between 9-17 + 19h. |
| -i / --interactive          | Interactive mode: allows you to chat through the command line instead of telegram.         |
| -d / --debug                |                                                                                            |
| -f [path]                   | Config file path (default $userdir/.config/rssnotify/config.toml )                         |
| -p / --db-path [path]       | Database file path (default $userdir/.config/rssnotify/database.db3 )                      |
| -l / --log-level [level]    | Default =info=. Can be =off=, =error=, =warn=, =info=, =debug=                                         |

** Config file
Example configuration below. Put it in ~~/.config/rssnotify/config.toml~ .

#+begin_src toml config.toml
  [config]
  bot_token = "YOUR BOT TOKEN"
  admin = 1234565 # Optional
  update_time = "9-12,13-16" # Optional. Will update every hour between 9 and 12 'o clock, and every hour between 13 and 16 'o clock local time.
  db_path = "/home/MYNAME/rssnotifyCustomDatabase.db3" # Optional
#+end_src

Available settings:
| admin       |   |
| bot_token   |   |
| db_path     |   |
| log_path    |   |
| update_time |   |

* Telegram commands
- Send /help to the telegram bot to view a list of commands.


| *Command*                                           | *Explanation*                                                                                                                                       |
| /help                                             | Display this text.                                                                                                                                |
| /feeds                                            | List the available feeds.                                                                                                                         |
| /collections                                      | List how many collections you have.                                                                                                               |
| /collection [collection_id]                       | Show the journals and keywords of a collection. Provide the collection number, starting at 0 (eg "/collection 0")                                 |
| /newcollection                                    | Create a new, empty collection                                                                                                                    |
| /newfeed [feed_name] [link]                       | Add a new pubmed feed. Provide the name of the feed (with any spaces replaced by _) and link.                                                     |
| /addfeed [feed id] [collection]                   | Add a feed. Provide the id and collection number. Eg. /addfeed 101532453 0 to add Insights in Imaging to your first feed collection.              |
| /addtowhitelist [word] [collection]               | Add a keyword to the whitelist. Provide the keyword and collection number. Space can be entered by using _. Eg. /addtowhitelist cervical_cancer 0 |
| /addtoblacklist [word] [collection]               | Add a keyword to the blacklist. Space can be entered by using _                                                                                   |
| /removefeed [id] [collection]                     | Remove a feed from a collection.                                                                                                                  |
| /removefromblacklist [word] [collection]          | Remove a keyword from the whitelist.                                                                                                              |
| /removefromwhitelist [word] [collection]          | Remove a keyword from the blacklist.                                                                                                              |
| /presets                                          | List available presets.                                                                                                                           |
| /preset [preset]                                  | Show preset content.                                                                                                                              |
| /addpresettocollection [preset_name] [collection] | Add the content of a preset to a collection.                                                                                                      |
|                                                   |                                                                                                                                                   |

* Admin commands

    | /update                | Update all the feeds (can take a while). |
    | /users                 | List all the users in the database.      |
    | /asUser [id] [command] | Execute a command as another user        |


* To do
- Integrate ~systemd --user~.
- Remove ~tokio_rusqlite~ and replace with ~rusqlite~.
- Dynamic presets based on conf file.
- Refactor everything.
